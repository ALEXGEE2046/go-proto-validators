// Code generated by protoc-gen-gogo.
// source: validator.proto
// DO NOT EDIT!

/*
Package validator is a generated protocol buffer package.

It is generated from these files:
	validator.proto

It has these top-level messages:
	FieldValidator
*/
package validator

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type FieldValidator struct {
	// Uses a Golang RE2-syntax regex to match the field contents.
	Regex *string `protobuf:"bytes,1,opt,name=regex" json:"regex,omitempty"`
	// Integer value compared to which the field content should be strictly greater.
	IntGt *int64 `protobuf:"varint,2,opt,name=int_gt,json=intGt" json:"int_gt,omitempty"`
	// Integer value compared to which the field content should be strictly smaller.
	IntLt *int64 `protobuf:"varint,3,opt,name=int_lt,json=intLt" json:"int_lt,omitempty"`
	// Used for nested message types, requires that the message type exists.
	MsgExists *bool `protobuf:"varint,4,opt,name=msg_exists,json=msgExists" json:"msg_exists,omitempty"`
	// Human error specifies a user-customizable error that is visible to the user.
	HumanError *string `protobuf:"bytes,5,opt,name=human_error,json=humanError" json:"human_error,omitempty"`
	// Floating-point value compared to which the field content should be greater or equal.
	FltGte *float64 `protobuf:"fixed64,6,opt,name=flt_gte,json=fltGte" json:"flt_gte,omitempty"`
	// Floating-point value compared to which the field content should be smaller or equal.
	FltLte           *float64 `protobuf:"fixed64,7,opt,name=flt_lte,json=fltLte" json:"flt_lte,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FieldValidator) Reset()                    { *m = FieldValidator{} }
func (m *FieldValidator) String() string            { return proto.CompactTextString(m) }
func (*FieldValidator) ProtoMessage()               {}
func (*FieldValidator) Descriptor() ([]byte, []int) { return fileDescriptorValidator, []int{0} }

func (m *FieldValidator) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

func (m *FieldValidator) GetIntGt() int64 {
	if m != nil && m.IntGt != nil {
		return *m.IntGt
	}
	return 0
}

func (m *FieldValidator) GetIntLt() int64 {
	if m != nil && m.IntLt != nil {
		return *m.IntLt
	}
	return 0
}

func (m *FieldValidator) GetMsgExists() bool {
	if m != nil && m.MsgExists != nil {
		return *m.MsgExists
	}
	return false
}

func (m *FieldValidator) GetHumanError() string {
	if m != nil && m.HumanError != nil {
		return *m.HumanError
	}
	return ""
}

func (m *FieldValidator) GetFltGte() float64 {
	if m != nil && m.FltGte != nil {
		return *m.FltGte
	}
	return 0
}

func (m *FieldValidator) GetFltLte() float64 {
	if m != nil && m.FltLte != nil {
		return *m.FltLte
	}
	return 0
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*FieldValidator)(nil),
	Field:         65020,
	Name:          "validator.field",
	Tag:           "bytes,65020,opt,name=field",
}

func init() {
	proto.RegisterType((*FieldValidator)(nil), "validator.FieldValidator")
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("validator.proto", fileDescriptorValidator) }

var fileDescriptorValidator = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xf4, 0x30,
	0x10, 0x86, 0xc9, 0xb7, 0x5f, 0xbb, 0x76, 0x0a, 0x0a, 0x41, 0x31, 0x0a, 0x8b, 0xc5, 0x53, 0x4f,
	0x5d, 0xf0, 0xe8, 0x51, 0x58, 0xf7, 0xb2, 0xa0, 0xe4, 0xe0, 0xc1, 0x4b, 0xa9, 0x76, 0x1a, 0x03,
	0x69, 0x53, 0x92, 0x59, 0xd9, 0x5f, 0xe8, 0x9f, 0xd2, 0x83, 0x34, 0xa5, 0x5d, 0x3c, 0xe6, 0x79,
	0x93, 0xcc, 0x3c, 0x2f, 0x9c, 0x7d, 0x56, 0x46, 0xd7, 0x15, 0x59, 0x57, 0xf4, 0xce, 0x92, 0xe5,
	0xc9, 0x0c, 0xae, 0x33, 0x65, 0xad, 0x32, 0xb8, 0x0e, 0xc1, 0xdb, 0xbe, 0x59, 0xd7, 0xe8, 0xdf,
	0x9d, 0xee, 0xe7, 0xcb, 0xb7, 0x5f, 0x0c, 0x4e, 0x1f, 0x35, 0x9a, 0xfa, 0x65, 0x7a, 0xc4, 0xcf,
	0x21, 0x72, 0xa8, 0xf0, 0x20, 0x58, 0xc6, 0xf2, 0x44, 0x8e, 0x07, 0x7e, 0x01, 0xb1, 0xee, 0xa8,
	0x54, 0x24, 0xfe, 0x65, 0x2c, 0x5f, 0xc8, 0x48, 0x77, 0xb4, 0xa5, 0x09, 0x1b, 0x12, 0x8b, 0x19,
	0xef, 0x88, 0xaf, 0x00, 0x5a, 0xaf, 0x4a, 0x3c, 0x68, 0x4f, 0x5e, 0xfc, 0xcf, 0x58, 0x7e, 0x22,
	0x93, 0xd6, 0xab, 0x4d, 0x00, 0xfc, 0x06, 0xd2, 0x8f, 0x7d, 0x5b, 0x75, 0x25, 0x3a, 0x67, 0x9d,
	0x88, 0xc2, 0x20, 0x08, 0x68, 0x33, 0x10, 0x7e, 0x09, 0xcb, 0xc6, 0x0c, 0xd3, 0x50, 0xc4, 0x19,
	0xcb, 0x99, 0x8c, 0x1b, 0x43, 0x5b, 0xc2, 0x29, 0x30, 0x84, 0x62, 0x39, 0x07, 0x3b, 0xc2, 0xfb,
	0x67, 0x88, 0x9a, 0xc1, 0x83, 0xaf, 0x8a, 0x51, 0xba, 0x98, 0xa4, 0x8b, 0xe0, 0xf7, 0xd4, 0x93,
	0xb6, 0x9d, 0x17, 0x3f, 0xdf, 0xc3, 0xa2, 0xe9, 0xdd, 0x55, 0x71, 0xec, 0xed, 0x6f, 0x01, 0x72,
	0xfc, 0xe8, 0x21, 0x7d, 0x3d, 0x36, 0xf9, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xf2, 0x86, 0xeb,
	0x66, 0x01, 0x00, 0x00,
}
